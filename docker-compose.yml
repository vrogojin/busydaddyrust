volumes:
  lgsm:
services:
  lgsm:
    # Limiting server resources
    cpu_count: 2
    mem_limit: 12gb
    # other stuf
    init: true
    user: root
    build:
      context: .
      dockerfile: Dockerfile
    image: rust-server-custom:latest
    # Do not change this from restart: always. Maintenance scripts assume
    # docker-compose auto restarts the rust server.
    restart: always
    environment:
      - SERVERNAME=${SERVERNAME}
      - WORLDSIZE=${WORLDSIZE}
      - SEED=${SEED}
    command:
      - /bin/bash
      - -exc
      - |
        # MAIN
        apt-get update
        apt-get install -y dos2unix rsync sudo vim nano libgdiplus python3.8-venv lib32z1
        #grant access to video card for direct rendering (not used by rust ds)
        #function get_video_gid() {
        #  find /dev/dri -maxdepth 1 -type c | head -n1 | xargs stat -c %g
        #}
        #function get_video_group() {
        #  local gid="$$(get_video_gid)"
        #  awk -v gid="$$gid" -F: '$$3 == gid { print $$1 }' /etc/group
        #}
        #vid="$$(get_video_group)"
        #if [ -z "$$vid" ]; then
        #  groupadd -g "$$(get_video_gid)" videocard
        #  vid=videocard
        #fi
        #usermod -a -G "$$vid" linuxgsm

        # grant temporary sudo access for initial setup
        echo 'linuxgsm  ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/lgsm
        lgsm_uid="$$(id -u linuxgsm)"
        lgsm_gid="$$(id -g linuxgsm)"
        if [ ! "$$lgsm_uid" = 1000 ]; then
          sed -i "s/:$$lgsm_uid:$$lgsm_gid:/:1000:1000:/" /etc/passwd
          sed -i "s/:$$lgsm_gid:/:1000:/" /etc/group
        fi
        if [ ! "$$(stat -c '%U' /home/linuxgsm)" = linuxgsm ]; then
          chown -R linuxgsm: /home/linuxgsm
        fi
        if [ ! "$$(stat -c '%U' /custom-maps)" = linuxgsm ]; then
          chown -R linuxgsm: /custom-maps
        fi
        python3 -m venv /home/linuxgsm/.venv
        grep -F .venv ~linuxgsm/.bash_profile || echo 'source /home/linuxgsm/.venv/bin/activate' > ~linuxgsm/.bash_profile
        grep -F .venv ~linuxgsm/.bashrc || echo 'source /home/linuxgsm/.venv/bin/activate' > ~linuxgsm/.bashrc
        if [ ! "$$(stat -c '%U' /home/linuxgsm/.venv)" = linuxgsm ]; then
          chown -R linuxgsm: /home/linuxgsm/.venv
        fi
        chown linuxgsm: /home/linuxgsm /home/linuxgsm/serverfiles /home/linuxgsm/serverfiles/oxide
        chown -R linuxgsm: /home/linuxgsm/serverfiles/oxide/config
        # Fix any permission issues in oxide data directory
        if [ -d /home/linuxgsm/serverfiles/oxide/data ]; then
          chown -R linuxgsm: /home/linuxgsm/serverfiles/oxide/data
        fi
        rm -f ~linuxgsm/linuxgsm.sh
        su - linuxgsm -c "LINUX_GSM_VERSION=\"${LINUX_GSM_VERSION:-v20.4.1}\" SERVERNAME=\"${SERVERNAME}\" WORLDSIZE=\"${WORLDSIZE}\" SEED=\"${SEED}\" /utils/custom-rust-server.sh"
    volumes:
      - lgsm:/home/linuxgsm
      - ./mod-configs/:/home/linuxgsm/serverfiles/oxide/config/:rw
      - ./custom-mods/:/custom-plugins/:ro
      - ./custom-maps/:/custom-maps/:rw
      - ./harmony-mods:/home/linuxgsm/serverfiles/HarmonyMods
      - ./harmony-config:/home/linuxgsm/serverfiles/HarmonyConfig
      - ./utils/:/utils/:ro
      - ./rust-environment.sh:/rust-environment.sh:ro
    ports:
      - ${RUST_RCON_INTERFACE:-127.0.0.1}:28016:28016
      - 0.0.0.0:28015:28015/udp
      - 0.0.0.0:8000:8000/tcp
      - 0.0.0.0:8888:8888/tcp  # WebRustPlus web interface
    healthcheck:
      test: ["CMD", "pgrep", "RustDedicated"]
      interval: 10s
      retries: 3
      start_period: 15m
#    devices:
#      - /dev/dri:/dev/dri
